---
- name: "reset everything and rebuild environmnet"
  hosts: osp10-controllers
  gather_facts: no
  #hosts: 10.55.102.156
  tasks:
    - name: "Set fact for later use"
      set_fact:
        controller: "{{ inventory_hostname }}"

    - name: "test if openstack is up, or just pxe boot"
      local_action: wait_for host="{{ controller }}" port=22 timeout=3
      #local_action: shell ssh -o ConnectTimeout=10 {{ controller }} "echo success"
      register: host_accessible
      ignore_errors: yes

    - name: "clean up from last deploy of osp"
      block:
      - name: "get list of vms off of osp10"
        shell: |
          source /root/keystonerc_dtaylor
          openstack server list | grep '|' | awk '{print $2}'|grep -v 'ID'
        become: true
        register: vms
        ignore_errors: yes
  
      - name: "delete all the vms off of osp10"
        shell: |
          source /root/keystonerc_dtaylor
          openstack server delete {{ item }}
          sleep 30
        become: true
        with_items: "{{ vms.stdout.split() }}"
        ignore_errors: yes
  
      - name: "update all the ansible tower osp10 repos"
        shell: |
          curl --ciphers ecdhe_rsa_aes_128_gcm_sha_256 -f -k \
          -H 'Content-Type: application/json' -XPOST \
          --user admin:ansible \
          https://10.55.102.248/api/v1/inventory_sources/{{ item }}/update/
          sleep 15
        with_items:
          - 226
          - 1141
          - 349
          - 310
          - 719
          - 720
        ignore_errors: yes
      when: host_accessible.state is defined and host_accessible.state == "started"
      #when: host_accessible.state is defined and host_accessible.stdout.find("success") != -1
      rescue:
        # this is run if any of the above fail, add them to broke-nodes group
        - name: "I guess osp this controller had an error, adding to broken inventory"
          debug: var=inventory_hostname

        - name: Adding errored nodes to broken-nodes inventory group
          add_host: name={{ inventory_hostname }}
                groups=broken-nodes
                instance_name={{ inventory_hostname }}

    - name: "operate on unreachable nodes"
      block:
        - name: "I guess osp this controller isn't up, adding to broken inventory"
          debug: var=inventory_hostname

        - name: Adding unreachable nodes to broken-nodes inventory group
          add_host: name={{ inventory_hostname }}
                groups=broken-nodes
                instance_name={{ inventory_hostname }}
      when: host_accessible.state is not defined
      # we could connect, but not find the success text
      #when: host_accessible.state is defined and host_accessible.stdout.find("success") == -1

    - name: "cleanup on all broken-nodes group"
      block:
      - name: "echo list the broken nodes"
        local_action: shell echo {{ item }} is unreachable
        with_inventory_hostnames:
          - broken-nodes

# always include pxe boot playbook
- include: reimage-servers.yml
