---
- name: "Network Test"
  hosts: router
  vars:
    add_int_ip: "10.55.102.254"
    add_int_port: "80"
    add_ext_ip: "173.15.218.99"
    add_ext_port: "9399"
    rm_int_ip: "10.55.102.254"
    rm_int_port: "80"
    rm_ext_ip: "173.15.218.99"
    rm_ext_port: "9399"
  tasks:
  - ios_facts:
      gather_subset: all

  - name: "Get the running-config"
    ios_command:
      commands:
        - show run
    register: showrun

  - name: "Save a backup of the running-config"
    copy: 
      content: "{{ showrun.stdout[0] }}"
      dest: "network-backups/show_run_{{ inventory_hostname }}.txt"

  - name: "Run show interface, save it in a varible to parse"
    ios_command:
      commands:
        - show interface
    register: showint

  - name: "Show the 'show interface' command. We will parse the output of this ourselves"
    debug: var=showint.stdout_lines

  - name: "Import the network-engine role to create the parser filter"
    import_role:
      name: ansible-network.network-engine

# this spec file didn't work
#  - name: "parse the raw output method 1"
#    command_parser:
#      file: "iface-parser1.spec"
#      content: "{{ showint.stdout[0] }}"

  - name: "parse the raw output method 2"
    command_parser:
      file: "iface-parser2.spec"
      content: "{{ showint.stdout[0] }}"

  - name: "Show the parsed output"
    debug: var=interface_facts

  - name: "Show the regular old unparsed ansible_net_interfaces variable generated by ios_facts"
    debug: var=ansible_net_interfaces

# couldn't get working
#  - name: "Show all the interface descriptions entries for logging using select"
#    debug: var="{{ interface_facts[].interface[].description | select('match', '*(Vlan)*') | list }}"

# couldn't get the json query stuff to work
#  - name: "Show all the interface descriptions entries for logging using ansible_net"
#    debug: var="{{ interface_facts | json_query(query) }}"
#    vars:
#      query: "[?contains('interface_facts.interface','Vlan')]"
#

  - name: "Show all the entries with Vlans in description"
    debug: var=item
    when: "'Vlan' in item.interface.description"
    with_items: "{{ interface_facts }}"
    
  - name: "Set vlaninterfaces fact to create a list of interfaces with Vlans in description"
    set_fact:
      vlaninterfaces: "{% if vlaninterfaces is defined %}{{ vlaninterfaces }} + {% endif %}[ '{{ item.interface.description }}' ]"
    when: "'Vlan' in item.interface.description"
    with_items: "{{ interface_facts }}"

  - name: "Show all the Vlan entries made from set_fact"
    debug: var=vlaninterfaces

  - name: "Test fact for removing static nat entry"
    set_fact: 
      removeme: "ip nat inside source static tcp {{ rm_int_ip }} {{ rm_int_port }} {{ rm_ext_ip }} {{ rm_ext_port }} extendable"

  - name: "Remove a static nat entry from config"
    ios_config:
      lines:
        - "no ip nat inside source static tcp {{ rm_int_ip }} {{ rm_int_port }} {{ rm_ext_ip }} {{ rm_ext_port }} extendable"
    when: "removeme in showrun.stdout[0]"

  - name: "Test fact for adding static nat entry"
    set_fact: 
      addme: "ip nat inside source static tcp {{ add_int_ip }} {{ add_int_port }} {{ add_ext_ip }} {{ add_ext_port }} extendable"

  - name: "Add a static nat entry to config"
    ios_config:
      lines:
        - "ip nat inside source static tcp {{ add_int_ip }} {{ add_int_port }} {{ add_ext_ip }} {{ add_ext_port }} extendable"
    when: "addme not in showrun.stdout[0]"

