---
- name: "Import glance images from nfs share"
  hosts: 10.55.102.158
  tasks:
    - name: "Create lab project and user"
      shell: |
        . /root/keystonerc_admin
        openstack project create --description "{{ openstack['project_name'] }}" {{ openstack['project_name'] }}
        openstack user create --project {{ openstack['project_name'] }} --password {{ openstack['project_pass'] }} {{ openstack['project_user'] }}
      args:
        chdir: /root
      become: true
      ignore_errors: yes

    - name: "copy over {{ openstack['project_user'] }} keystone file"
      template:
        src: "openstack/keystonerc_{{ openstack['project_user'] }}.j2"
        dest: "/root/keystonerc_{{ openstack['project_user'] }}"
        owner: root
        group: root
        mode: 0644

    - name: "copy over glance import script"
      template:
        src: openstack/glance-import.sh.j2
        dest: /root/glance-import.sh
        owner: root
        group: root
        mode: 0755
        
    - name: "make the import directory"
      file:
        path: /mnt/compute1/glance-images
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: this is used by openstack dnsmasq to update the applications dns entry
      template:
        src: openstack/dns-updater.sh.j2
        dest: /usr/local/bin/dns-updater.sh
        owner: root
        group: root
        mode: 0755

    - name: openstack dnsmasq config file
      template:
        src: openstack/dnsmasq.conf.j2
        dest: /etc/neutron/dnsmasq.conf
        owner: root
        group: root
        mode: 0644

    - name: update neutron dhcp_agent.ini dns values
      lineinfile: 
        line: "dnsmasq_dns_servers = {{ openstack['dns_server'] }}"
        dest: /etc/neutron/dhcp_agent.ini
        regexp: "^#dnsmasq_dns_servers ="
        state: present

    - name: update neutron dhcp_agent.ini domain values
      lineinfile: 
        line: "dhcp_domain = {{ openstack['dhcp_domain'] }}"
        dest: /etc/neutron/dhcp_agent.ini
        regexp: "^#dhcp_domain ="
        state: present

    - name: update neutron neutron.conf domain values
      lineinfile: 
        line: "dns_domain = {{ openstack['dhcp_domain'] }}"
        dest: /etc/neutron/neutron.conf
        regexp: "^#dns_domain ="
        state: present

    - name: update neutron dhcp_agent.ini config file values
      lineinfile:
        line: "dnsmasq_config_file = /etc/neutron/dnsmasq.conf"
        dest: /etc/neutron/dhcp_agent.ini
        regexp: "^#dnsmasq_config_file ="
        state: present

    - name: update neutron dhcp_agent.ini isolated network values
      lineinfile:
        line: "enable_isolated_metadata = True"
        dest: /etc/neutron/dhcp_agent.ini
        regexp: "^enable_isolated_metadata = False"
        state: present

    - name: update nova.conf domain values
      lineinfile:
        line: "dhcp_domain={{ openstack['dhcp_domain'] }}"
        dest: /etc/nova/nova.conf
        regexp: "^#dhcp_domain="
        state: present

    - name: "killing dnsmasq"
      command: killall dnsmasq
      become: true

    - name: "Enabling and restarting services openstack nova and neutron-dhcp-agent services"
      service:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items:
        - neutron-dhcp-agent
        - openstack-nova-api
        - openstack-nova-cert
        - openstack-nova-consoleauth
        - openstack-nova-scheduler
        - openstack-nova-conductor
        - openstack-nova-novncproxy 
      become: true

    - name: "Mount nfs share to import glance images"
      mount:
        path: /mnt/compute1/glance-images
        src: 10.55.2.155:/mnt/drobo/software/BackUp/openstack/glance-images
        fstype: nfs
        opts: noauto,x-systemd.automount,x-systemd.device-timeout=10,timeo=14,x-systemd.idle-timeout=1min
        state: present

    - name: "Import a couple of glance images ..."
      shell: |
        mount /mnt/compute1/glance-images
        /root/glance-import.sh  -f /mnt/compute1/glance-images/RHEL-7.3-Cloud-bare.qcow2
        /root/glance-import.sh  -f /mnt/compute1/glance-images/RHEL-Atomic-7.2.6-1-bare.qcow2
        /root/glance-import.sh  -f /mnt/compute1/glance-images/PXE-client-bare.raw
      args:
        chdir: /root
      become: true

    - name: "Create the networks ..."
      shell: |
        . /root/keystonerc_admin
        projectid=$(openstack project list | grep {{ openstack['project_name'] }} | awk '{print $2}')
        neutron net-create Storage_105 --provider:network_type vlan --provider:physical_network inter-vlan --provider:segmentation_id 105 --tenant-id=$projectid
        neutron net-create Provisioning_102 --provider:network_type vlan --provider:physical_network inter-vlan --provider:segmentation_id 102 --tenant-id=$projectid
        neutron subnet-create Storage_105 10.55.105.0/24 --gateway 10.55.105.1 --name "NET105" --allocation-pool start=10.55.105.200,end=10.55.105.225 --tenant-id=$projectid
        neutron subnet-create Provisioning_102 10.55.102.0/24 --gateway 10.55.102.1  --name "NET102" --allocation-pool start=10.55.102.200,end=10.55.102.225 --tenant-id=$projectid --dns-nameserver
        . /root/keystone_{{ openstack['project_user'] }}
        openstack keypair create --public-key ~/.ssh/id_rsa.pub {{ openstack['project_user'] }}-openstack
        openstack security group create {{ openstack['project_name'] }}-sg --description "{{ openstack['project_name'] }} Security Group"
        openstack security group rule create --protocol icmp {{ openstack['project_name'] }}-sg
        openstack security group rule create --protocol tcp {{ openstack['project_name'] }}-sg
        openstack security group rule create --protocol udp {{ openstack['project_name'] }}-sg
      args:
        chdir: /root
      become: true

    - name: "Configure Huge Pages and set a performance openstack flavor ..."
      shell: |
        grubby --update-kernel=ALL --args="hugepagesz=2M hugepages=2048"
        grub2-install /dev/sda
        source /root/keystonerc_admin
        nova flavor-create m1.medium.performance 6 4096 20 8
        nova flavor-key m1.medium.performance set hw:mem_page_size=2048
      args:
        chdir: /root
      become: true

    - name: "Reboot to new settings. Back in 10 mins or so"
      shell: |
        shutdown -r +1 && sleep 3
      args:
        chdir: /root
      become: true

