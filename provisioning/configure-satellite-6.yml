---
## hammer cli guide
## https://access.redhat.com/documentation/en-us/red_hat_satellite/6.2/html-single/hammer_cli_guide/
## hammer cheat sheet
## https://access.redhat.com/articles/2258471
## sat6 quick start guide
## https://access.redhat.com/documentation/en-us/red_hat_satellite/6.2/html-single/quick_start_guide/

#- include: "firstboot.yml"

- name: "Configure Satellite 6"
  hosts: all
  vars:
    compute_resources:
      - name: 'OSP8 Redhat Lab'
        description: 'Openstack 8 Redhat Lab'
        user: 'dtaylor'
        pass: "{{ ipmi_pass }}"
        tenant: "Redhat Lab"
        url: "http://{{ osp8-controller }}:5000/v2.0/tokens"
      - name: 'OSP8 Masked Admins'
        description: 'Openstack 8 Masked_Admins'
        user: dtaylor
        pass: "{{ ipmi_pass }}"
        tenant: "Masked_Admins"
        url: "http://{{ osp8-controller }}:5000/v2.0/tokens"
      - name: 'OSP10 Redhat Lab'
        description: 'Openstack 10'
        user: dtaylor
        pass: redhat123
        tenant: "Redhat_Lab"
        url: "http://{{ osp10-controller }}:5000/v2.0/tokens"
    sat6:
      environments:
        - name: 'Development'
          prior: 'Library'
        - name: 'Testing'
          prior: 'Development'
        - name: 'Production'
          prior: 'Testing'
      locations:
        - "Legacy_Servers"
        - "Private_Cloud"
        - "Public_Cloud"
      domains:
        - "dev.maskedadmins.com"
        - "test.maskedadmins.com"
        - "prod.maskedadmins.com"
        - "strg.maskedadmins.com"
      subnets:
        - name: "Dev_103"
          gw: "10.55.103.1"
          network: "10.55.103.0"
          mask: "255.255.255.0"
          dns: "10.55.102.5"
          domain: "dev.maskedadmins.com"
          location: "Private_Cloud"
          org: "Redhat_Lab"
        - name: "Test_104"
          gw: "10.55.104.1"
          network: "10.55.104.0"
          mask: "255.255.255.0"
          dns: "10.55.102.5"
          domain: "test.maskedadmins.com"
          location: "Private_Cloud"
          org: "Redhat_Lab"
        - name: "Storage_105"
          gw: "10.55.105.1"
          network: "10.55.105.0"
          mask: "255.255.255.0"
          dns: "10.55.102.5"
          domain: "strg.maskedadmins.com"
          location: "Legacy_Servers"
          org: "Infra"
        - name: "Prod_106"
          gw: "10.55.106.1"
          network: "10.55.106.0"
          mask: "255.255.255.0"
          dns: "10.55.102.5"
          domain: "prod.maskedadmins.com"
          location: "Private_Cloud"
          org: "Infra"
      orgs:
        - name: "Infra"
          label: "infrastructure"
          description: "Our example infra organization for managing content."
          locations:
            - 'Legacy_Servers'
            - 'Private_Cloud'
            - 'Public_Cloud'
          domains:
            - "dev.maskedadmins.com"
            - "test.maskedadmins.com"
            - "prod.maskedadmins.com"
            - "strg.maskedadmins.com"
          subnets:
            - "Dev_103"
            - "Test_104"
            - "Storage_105"
            - "Prod_106"
        - name: "Redhat_Lab"
          label: "redhatlab"
          description: "Our example sub organization for managing content."
          locations:
            - 'Private_Cloud'
            - 'Public_Cloud'
          domains:
            - "dev.maskedadmins.com"
            - "test.maskedadmins.com"
          subnets:
            - "Dev_103"
            - "Test_104"
    sat6_default_org: Redhat_Lab
    sat6_default_location: Private_Cloud
    sat6_default_hostcollection: RHEL_7_x86_64
    sat6_default_hostgroup: "RHEL_7_x86_64_Hostgroup"
    sat6_manifest: "manifest_569d1776-9ed2-4d09-8a3e-86e8f92b59e9.zip"
    sat6_pool_ids: ['']
    sat6_enabled_repos:
      - "Red Hat Enterprise Linux 7 Server (RPMs)"
      - "Red Hat Enterprise Linux 7 Server (Kickstart)"
    sat6_url: "https://{{ ansible_fqdn }}/"
    sat6_user: "admin"
    sat6_pass: "redhat123"
    fusor_installer_lease_from: 10.55.102.200
    fusor_installer_lease_to: 10.55.102.211
  tasks:
  - name: "Setup check"
    shell: |
      if [ -e "/opt/satellite/{{ sat6_manifest }}" ]
      then
        echo "true"
      else
        echo "false"
      fi
    register: initialsetup
    become: true

  - name: "Block to perform initial setup"
    block:
      - name: "Update firewall port for Sat6"
        shell: |
            echo "calling update firewall port for sat6"
            curl -f -k -H 'Content-Type: application/json' -XPOST -d '{"extra_vars":"{\"int_ip\":\"{{ ansible_default_ipv4['address'] }}\",\"int_port\":\"443\",\"ext_port\":\"8448\"}"}' --user admin:ansible https://10.55.102.248:443/api/v1/job_templates/660/launch/
    
      - name: "Run fusor-installer to setup Sat6"
        shell: |
          echo -e "8\n{{ fusor_installer_lease_from }}\n1\n" | /sbin/fusor-installer --skip_validations=true \
          --fusor-foreman-admin-password={{ sat6_pass }} > fusor-installer.stdout 2>fusor-installer.stderr
          cat fusor-installer.stdout
          cat fusor-installer.stderr
        become: true
        args:
          creates: /root/fusor-installer.stdout
    
    #  - name: "Enabling needed repos for updates"
    #    shell: "subscription-manager repos --enable=rhel-7-server-satellite-tools-6.2-rpms"
    #
    #  - name: "yum update this bad boy"
    #    shell: |
    #      yum -y update
    
      - name: "make hammer config dir"
        file:
          path: /root/.hammer
          state: directory
          mode: 0755
    
      - name: "make setup tracking dir"
        file:
          path: /root/.setup
          state: directory
          mode: 0755
    
      - name: "Configure hammer cli tool"
        template:
            dest: /etc/hammer/cli_config.yml
            src: satellite/cli_config.yml.j2
            owner: root
            group: root
            mode: 0644
    
      - name: "Copy over manifest"
        #template:
        copy:
            dest: /tmp/manifest.zip
            #src: "satellite/{{ sat6_manifest }}"
            src: "/opt/satellite/{{ sat6_manifest }}"
            owner: root
            group: root
            mode: 0644
    when: initialsetup.stdout == "false"


  - name: "Creating Orgs for Satellite 6"
    shell: |
        hammer organization create --name "{{ item.name }}" --label "{{ item.label }}" \
        --description "{{ item.description }}"
    with_items: "{{ sat6.orgs }}"
    args:
      creates: /root/.setup/step1

  - name: "Org creation Complete"
    shell: touch /root/.setup/step1
    args:
      creates: /root/.setup/step1

  - name: "Creating Locations for Satellite 6"
    shell: |
        hammer location create --name "{{ item }}"
    with_items: "{{ sat6.locations }}"
    args:
      creates: /root/.setup/step2

  - name: "Location creation Complete"
    shell: touch /root/.setup/step2
    args:
      creates: /root/.setup/step2

  - name: "Adding Orgs to Locations"
    shell: |
        hammer location add-organization --name "{{ item.1 }}" --organization "{{ item.0.name }}"
    with_subelements:
      - "{{ sat6.orgs }}"
      - locations
    args:
      creates: /root/.setup/step3

  - name: "Org to Location creation Complete"
    shell: touch /root/.setup/step3
    args:
      creates: /root/.setup/step3

#  - name: "Setting default org and location Satellite 6"
#    shell: |
#        defaultorg=$(hammer organization list  | grep {{ sat6_default_org }} | awk '{print $1}')
#        defaultloc=$(hammer location list  | grep {{ sat6_default_location }} | awk '{print $1}')
#        hammer defaults add --param-name organization_id --param-value $defaultorg
#        hammer defaults add --param-name location_id --param-value $defaultloc && touch /root/.setup/step1
#    args:
#      creates: /root/.setup/step1
#    ignore_errors: yes

  - name: "Subnet and Domain check"
    shell: |
      if [ -e "/root/.setup/step9" ]
      then
        echo "true"
      else
        echo "false"
      fi
    register: subnetstep
    become: true

  - name: "Domain and Subnet creation"
    block:
      - name: "Creating domains"
        shell: |
            hammer domain create --name "{{ item }}"
        with_items: "{{ sat6.domains }}"
        args:
          creates: /root/.setup/step4
    
      - name: "Domain creation Complete"
        shell: touch /root/.setup/step4
        args:
          creates: /root/.setup/step4
    
      - name: "Creating subnets and adding to domains"
        shell: |
            domainid=$(hammer domain list  | grep {{ item.domain }} | awk '{print $1}')
            hammer subnet create --domain-ids=${domainid} \
            --gateway={{ item.gw }} \
            --mask={{ item.mask }} \
            --name={{ item.name }} \
            --tftp-id=1 --network={{ item.network }} \
            --dns-primary={{ item.dns }}
        with_items: "{{ sat6.subnets }}"
        args:
          creates: /root/.setup/step5
    
      - name: "Subnet creation Complete"
        shell: touch /root/.setup/step5
        args:
          creates: /root/.setup/step5
    
      - name: "Adding Domains to Orgs and Locations"
        shell: |
            domainid=$(hammer domain list  | grep {{ item.1 }} | awk '{print $1}')
            hammer organization add-domain --domain-id=${domainid} --name '{{ item.0.name }}'
        with_subelements:
          - "{{ sat6.orgs }}"
          - domains
        args:
          creates: /root/.setup/step6
    
      - name: "Subnet creation Complete"
        shell: touch /root/.setup/step6
        args:
          creates: /root/.setup/step6
    
      - name: "Adding Subnets to Orgs"
        shell: |
            subnetid=$(hammer subnet list  | grep {{ item.1 }} | awk '{print $1}')
            hammer organization add-subnet --subnet-id=${subnetid} --name '{{ item.0.name }}'
        with_subelements:
          - "{{ sat6.orgs }}"
          - subnets
        args:
          creates: /root/.setup/step7
    
      - name: "Add subnet to org Complete"
        shell: touch /root/.setup/step7
        args:
          creates: /root/.setup/step7
    
      - name: "Adding Domains to Locations"
        shell: |
            domainid=$(hammer domain list  | grep {{ item.domain }} | awk '{print $1}')
            hammer location add-domain --domain-id=${domainid} --name '{{ item.location }}'
        with_items: "{{ sat6.subnets }}"
        args:
          creates: /root/.setup/step8
    
      - name: "Add Domains to location Complete"
        shell: touch /root/.setup/step8
        args:
          creates: /root/.setup/step8
    
      - name: "Adding Subnets to Locations"
        shell: |
            subnetid=$(hammer subnet list  | grep {{ item.name }} | awk '{print $1}')
            hammer location add-subnet --subnet-id=${subnetid} --name '{{ item.location }}'
        with_items: "{{ sat6.subnets }}"
        args:
          creates: /root/.setup/step9
    
      - name: "Add Subnets to location Complete"
        shell: touch /root/.setup/step9
        args:
          creates: /root/.setup/step9
    when: subnetstep.stdout == "false"
    always:
      - name: "Subnet section complete"
        debug:  msg="Looks like we are done with subnet and domain section"

  - name: "Provisioning Satellite 6 - upload manifest"
    shell: |
        hammer subscription upload --file /tmp/manifest.zip --organization "{{ sat6_default_org }}" && \
        touch /root/.setup/step10
    args:
      creates: /root/.setup/step10

  - name: "Provisioning Satellite 6 - configure repositories"
    shell: |
        hammer repository-set enable \
        --name "{{ item }}" \
        --releasever "7Server" --basearch "x86_64" \
        --product "Red Hat Enterprise Linux Server" --organization "{{ sat6_default_org }}"
    with_items: "{{ sat6_enabled_repos }}"
    args:
      creates: /root/.setup/step11

  - name: "Provisioning Satellite 6 - tools repo"
    shell: |
        hammer repository-set enable \
        --name "Red Hat Satellite Tools 6.2 (for RHEL 7 Server) (RPMs)" \
        --basearch "x86_64" \
        --product "Red Hat Enterprise Linux Server" --organization "{{ sat6_default_org }}"
    args:
      creates: /root/.setup/step11

  - name: "Repo config Complete"
    shell: touch /root/.setup/step11
    args:
      creates: /root/.setup/step11

  - name: "Provisioning Satellite 6 - Syncing Content. This takes a long time."
    shell: |
        hammer product synchronize --name "Red Hat Enterprise Linux Server" \
        --organization "{{ sat6_default_org }}" && \
        touch /root/.setup/step12
    args:
      creates: /root/.setup/step12

  - name: "Provisioning Satellite 6 Host Collection"
    shell: |
        hammer host-collection create --name={{ sat6_default_hostcollection }} --organization "{{ sat6_default_org }}" && \
        touch /root/.setup/step13
    args:
      creates: /root/.setup/step13

  - name: "Provisioning Satellite 6 Lifecycle"
    shell: |
        hammer lifecycle-environment create --name "{{ item.name }}" \
        --description "Environment for {{ sat6_default_org }}'s {{ item.name }} Team" \
        --prior "{{ item.prior }}" --organization "{{ sat6_default_org }}"
    with_items: "{{ sat6.environments }}"
    args:
      creates: /root/.setup/step14

  - name: "Provisionging Lifecycle Complete"
    shell: touch /root/.setup/step14
    args:
      creates: /root/.setup/step14

  - name: "Creating Base Content View"
    shell: |
        sattoolsid=$(hammer repository list  | grep "Satellite Tools 6.2" | awk '{print $1}')
        rhelrepoid=$(hammer repository list  | grep "Linux 7 Server RPMs x86_64 7Server" | awk '{print $1}')
        ksid=$(hammer repository list  | grep "Linux 7 Server Kickstart x86_64 7Server" | awk '{print $1}')
        hammer content-view create --name "Base" \
        --description "Base operating system" \
        --repository-ids "${ksid},${rhelrepoid},${sattoolsid}" \
        --organization "{{ sat6_default_org }}"
        hammer content-view publish --name "Base" \
        --description "Initial content view for our operating system" \
        --organization "{{ sat6_default_org }}" && \
        touch /root/.setup/step15
    args:
      creates: /root/.setup/step15

  - name: "Promoting Environments {{ sat6.environments }}"
    shell: |
        hammer content-view version promote --content-view "Base" --version 1 \
        --to-lifecycle-environment "{{ item.name }}" --organization "{{ sat6_default_org }}"
    with_items: "{{ sat6.environments }}"
    args:
      creates: /root/.setup/step16

  - name: "Promotion Complete"
    shell: touch /root/.setup/step16
    args:
      creates: /root/.setup/step16

  - name: "Creating activation keys for environments"
    shell: |
      hammer activation-key create --name "{{ sat6_default_org }}-{{ item.name }}-key" \
      --unlimited-hosts --description "Example activation key for {{ item.name }}" \
      --lifecycle-environment "{{ item.name }}" --content-view "Base" \
      --organization "{{ sat6_default_org }}"
    with_items: "{{ sat6.environments }}"
    args:
      creates: /root/.setup/step17

  - name: "Activation keys Complete"
    shell: touch /root/.setup/step17
    args:
      creates: /root/.setup/step17

  - name: "Adding subs to activation keys for environments"
    shell: |
      hammer activation-key add-subscription --name "{{ sat6_default_org }}-{{ item[0]['name'] }}-key" \
      --subscription-id {{ item[1] }} \
      --organization "{{ sat6_default_org }}"
    with_nested:
      - "{{ sat6.environments }}"
      - "{{ sat6_pool_ids }}"
    args:
      creates: /root/.setup/step18

  - name: "Adding subs to activation keys Complete"
    shell: touch /root/.setup/step18
    args:
      creates: /root/.setup/step18

  - name: "Enabling sat tools repo in the keys"
    shell: |
      hammer activation-key content-override --name "{{ sat6_default_org }}-{{ item.name }}-key" \
      --content-label rhel-7-server-satellite-tools-6.2-rpms \
      --value 1 --organization "{{ sat6_default_org }}"
    with_items: "{{ sat6.environments }}"
    args:
      creates: /root/.setup/step19

  - name: "Step Complete"
    shell: touch /root/.setup/step19
    args:
      creates: /root/.setup/step19

  - name: "Adding host collection to activation keys"
    shell: |
      hammer activation-key add-host-collection --name={{ sat6_default_org }}-{{ item.name }}-key --host-collection={{ sat6_default_hostcollection }} --organization={{ sat6_default_org }}
    with_items: "{{ sat6.environments }}"
    args:
      creates: /root/.setup/step20


  - name: "Step Complete"
    shell: touch /root/.setup/step20
    args:
      creates: /root/.setup/step20

  - name: "Add all subscriptions to activation keys"
    shell: |
      for i in $(hammer --csv activation-key list --organization={{ sat6_default_org }} | awk -F, {'print $1'} | grep -vi '^ID'); do \
      for j in $(hammer --csv subscription list --organization={{ sat6_default_org }}  | awk -F, {'print $1'} | grep -vi '^ID'); do \
      hammer activation-key add-subscription --id ${i} --subscription-id ${j}; done; done && \
      touch /root/.setup/step21
    args:
      creates: /root/.setup/step21
    ignore_errors: yes

  - name: "Add partition table to OS"
    shell: |
      PARTID=$(hammer --csv partition-table list | grep 'Kickstart default' | awk -F, {'print $1'})
      for i in $(hammer --csv os list | awk -F, {'print $1'} | grep -vi '^ID')
      do
      hammer partition-table add-operatingsystem --id="${PARTID}" --operatingsystem-id="${i}"  
      done && \
      touch /root/.setup/step22
    args:
      creates: /root/.setup/step22

  - name: "Add kickstart pxe template to OS"
    shell: |
      PXEID=$(hammer --csv template list | grep 'Kickstart default PXELinux' | awk -F, {'print $1'})
      SATID=$(hammer --csv template list | grep 'Satellite Kickstart Default' | awk -F, {'print $1'})
      for i in $(hammer --csv os list | awk -F, {'print $1'} | grep -vi '^ID')
      do
      hammer template add-operatingsystem --id="${PXEID}" --operatingsystem-id="${i}"
      hammer os set-default-template --id="${i}" --config-template-id="${PXEID}"
      hammer os add-config-template --id="${i}" --config-template-id="${SATID}"
      hammer os set-default-template --id="${i}" --config-template-id="${SATID}"
      done && \
      touch /root/.setup/step23
    args:
      creates: /root/.setup/step23

  - name: "Add RHEL7 host group for each domain"
    shell: |
      MEDID=$(hammer --csv medium list | grep 'Kickstart_x86_64_7Server' | awk -F, {'print $1'})
      PARTID=$(hammer --csv partition-table list | grep 'Kickstart default' | awk -F, {'print $1'})
      OSID=$(hammer --csv os list | grep 'RedHat 7' | awk -F, {'print $1'})
      CAID=1
      PROXYID=1
      for os in $OSID
      do
      hammer hostgroup create --architecture="x86_64" --domain="{{ item.domain }}"  --medium-id="${MEDID}" --locations="{{ item.location }}" \
      --organization="{{ sat6_default_org }}" --name="{{ sat6_default_hostgroup }} for {{ item.domain }} ${os}" --subnet="{{ item.name }}" --partition-table-id="${PARTID}" \
      --operatingsystem-id="${os}" --puppet-ca-proxy-id="${CAID}" --puppet-proxy-id="${PROXYID}" --content-view="Base"
      done
    args:
      creates: /root/.setup/step24
    with_items: "{{ sat6.subnets }}"

  - name: "Host groups to domain Complete"
    shell: touch /root/.setup/step24
    args:
      creates: /root/.setup/step24

  - name: "Add Openstack Compute Resources"
    shell: |
      hammer compute-resource create \
      --name "{{ item.name }}" \
      --description "{{ item.description }}" \
      --locations "{{ sat6_default_location }}" \
      --organizations "{{ sat6_default_org }}" \
      --provider  Openstack \
      --user {{ item.user }} \
      --password {{ item.pass }} \
      --tenant="{{ item.tenant }}" \
      --url {{ item.url }}
    with_items: "{{ compute_resources }}"
    args:
      creates: /root/.setup/step25

  - name: "Compute Resources Complete"
    shell: touch /root/.setup/step25
    args:
      creates: /root/.setup/step25

