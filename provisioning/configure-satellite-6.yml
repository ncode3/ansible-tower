---
## hammer cli guide
## https://access.redhat.com/documentation/en-us/red_hat_satellite/6.2/html-single/hammer_cli_guide/
## hammer cheat sheet
## https://access.redhat.com/articles/2258471
## sat6 quick start guide
## https://access.redhat.com/documentation/en-us/red_hat_satellite/6.2/html-single/quick_start_guide/

- include: "firstboot.yml"

- name: "Configure Satellite 6"
  hosts: all
  vars:
    sat6_org: Redhat_Lab
    sat6_manifest: "manifest_569d1776-9ed2-4d09-8a3e-86e8f92b59e9.zip"
    sat6_pool_ids: ['']
    sat6_environments_base: "Development"
    sat6_environments: ['Testing','Production']
    sat6_url: "https://{{ ansible_fqdn }}/"
    sat6_user: "admin"
    sat6_pass: "redhat123"
    sat6_domain: "sat6.maskedadmins.com"
    fusor_installer_lease_from: 10.55.102.200
    fusor_installer_lease_to: 10.55.102.211
    dns_domain: "sat6.maskedadmins.com"
  tasks:
  - name: "Update firewall port for Sat6"
    shell: |
        echo "calling update firewall port for sat6"
        curl -f -k -H 'Content-Type: application/json' -XPOST -d '{"extra_vars":"{\"int_ip\":\"{{ ansible_default_ipv4['address'] }}\",\"int_port\":\"443\",\"ext_port\":\"8448\"}"}' --user admin:ansible https://10.55.102.248:443/api/v1/job_templates/660/launch/

  - name: "Run fusor-installer to setup Sat6"
    shell: |
      echo -e "8\n{{ fusor_installer_lease_from }}\n1\n" | /sbin/fusor-installer --skip_validations=true \
      --fusor-foreman-admin-password={{ sat6_pass }} > fusor-installer.stdout 2>fusor-installer.stderr
      cat fusor-installer.stdout
      cat fusor-installer.stderr
    become: true
    args:
      creates: /root/fusor-installer.stdout

#  - name: "Enabling needed repos for updates"
#    shell: "subscription-manager repos --enable=rhel-7-server-satellite-tools-6.2-rpms"
#
#  - name: "yum update this bad boy"
#    shell: |
#      yum -y update

  - name: "make hammer config dir"
    file:
      path: /root/.hammer
      state: directory
      mode: 0755

  - name: "make setup tracking dir"
    file:
      path: /root/.setup
      state: directory
      mode: 0755

  - name: "Configure hammer cli tool"
    template:
        dest: /etc/hammer/cli_config.yml
        src: satellite/cli_config.yml.j2
        owner: root
        group: root
        mode: 0644

  - name: "Copy over manifest"
    #template:
    copy:
        dest: /tmp/manifest.zip
        #src: "satellite/{{ sat6_manifest }}"
        src: "/opt/satellite/{{ sat6_manifest }}"
        owner: root
        group: root
        mode: 0644

  - name: "Provisioning Satellite 6"
    shell: |
        hammer organization create --name "{{ sat6_org }}" --label "{{ sat6_org }}" \
        --description "Our example organization for managing content."
        hammer location create --name "{{ sat6_org }}"
        hammer location add-organization --name "{{ sat6_org }}" --organization "{{ sat6_org }}"
        hammer domain create --name "{{ sat6_domain }}"
        hammer subnet create --domain-ids=1 --gateway='10.55.103.1' --mask='255.255.255.0' \
        --name='10.55.103.0/24'  --tftp-id=1 --network='10.55.103.0' \
        --dns-primary='10.55.102.5'  --name 'Sat 6 Subnet'
        hammer organization add-subnet --subnet-id=1 --name '{{ sat6_org }}'
        hammer organization add-domain --domain-id=1 --name '{{ sat6_org }}' && touch /root/.setup/step1
    args:
      creates: /root/.setup/step1

  - name: "Provisioning Satellite 6 - upload manifest"
    shell: |
        hammer subscription upload --file /tmp/manifest.zip --organization "{{ sat6_org }}" && touch /root/.setup/step2
    args:
      creates: /root/.setup/step2

  - name: "Provisioning Satellite 6 - configure repositories"
    shell: |
        hammer repository-set enable \
        --name "Red Hat Enterprise Linux 7 Server (RPMs)" \
        --releasever "7Server" --basearch "x86_64" \
        --product "Red Hat Enterprise Linux Server" --organization "{{ sat6_org }}"
        hammer repository-set enable \
        --name "Red Hat Enterprise Linux 7 Server (Kickstart)" \
        --releasever "7Server" --basearch "x86_64" \
        --product "Red Hat Enterprise Linux Server" --organization "{{ sat6_org }}"
        hammer repository-set enable \
        --name "Red Hat Satellite Tools 6.2 (for RHEL 7 Server) (RPMs)" \
        --basearch "x86_64" --product "Red Hat Enterprise Linux Server" \
        --organization "{{ sat6_org }}" && touch /root/.setup/step3
    args:
      creates: /root/.setup/step3

  - name: "Provisioning Satellite 6 - Syncing Content"
    shell: |
        hammer product synchronize --name "Red Hat Enterprise Linux Server" \
        --organization "{{ sat6_org }}" && touch /root/.setup/step4
    args:
      creates: /root/.setup/step4

  - name: "Provisioning Satellite 6 Lifecycle Base"
    shell: |
        # Create our application life cycle
        hammer host-collection create --name='RHEL 7 x86_64' --organization "{{ sat6_org }}"
        hammer lifecycle-environment create --name "{{ sat6_environments_base }}" \
        --description "Environment for {{ sat6_org }}'s {{ sat6_environments_base }} Team" \
        --prior "Library" --organization "{{ sat6_org }}" && touch /root/.setup/step5
    args:
      creates: /root/.setup/step5

  - name: "Provisioning Satellite 6 Lifecycle - the rest"
    shell: |
        # Create our application life cycle
        hammer lifecycle-environment create --name "{{ item }}" \
        --description "Environment for {{ sat6_org }}'s {{ item }} Team" \
        --prior "Library" --organization "{{ sat6_org }}"
    with_items: "{{ sat6_environments }}"
    args:
      creates: /root/.setup/step6

  - name: "Step Complete"
    shell: touch /root/.setup/step6
    args:
      creates: /root/.setup/step6

  - name: "Creating Base Content View"
    shell: |
        defaultorg=$(hammer organization list  | grep {{ sat6_org }} | awk '{print $1}')
        hammer defaults add --param-name organization_id --param-value $defaultorg
        sattoolsid=$(hammer repository list  | grep "Satellite Tools 6.2" | awk '{print $1}')
        rhelrepoid=$(hammer repository list  | grep "Linux 7 Server RPMs x86_64 7Server" | awk '{print $1}')
        ksid=$(hammer repository list  | grep "Linux 7 Server Kickstart x86_64 7Server" | awk '{print $1}')
        hammer content-view create --name "Base" \
        --description "Base operating system" \
        --repository-ids "${ksid},${rhelrepoid},${sattoolsid}" \
        --organization "{{ sat6_org }}"
        hammer content-view publish --name "Base" \
        --description "Initial content view for our operating system" \
        --organization "{{ sat6_org }}" && touch /root/.setup/step7
    args:
      creates: /root/.setup/step7

  - name: "Promoting Environments {{ sat6_environments }}"
    shell: |
        hammer content-view version promote --content-view "Base" --version 1 \
        --to-lifecycle-environment "{{ item }}" --organization "{{ sat6_org }}"
    with_items:
      - "{{ sat6_environments_base }}"
      - "{{ sat6_environments }}"
    args:
      creates: /root/.setup/step8

  - name: "Step Complete"
    shell: touch /root/.setup/step8
    args:
      creates: /root/.setup/step8

  - name: "Creating activation keys for environments"
    shell: |
      hammer activation-key create --name "{{ sat6_org}}-{{ item }}-key" \
      --unlimited-hosts --description "Example activation key" \
      --lifecycle-environment "{{ item }}" --content-view "Base" \
      --organization "{{ sat6_org }}"
    with_items:
      - "{{ sat6_environments_base }}"
      - "{{ sat6_environments }}"
    args:
      creates: /root/.setup/step9

  - name: "Step Complete"
    shell: touch /root/.setup/step9
    args:
      creates: /root/.setup/step9

  - name: "Adding subs to activation keys for environments"
    shell: |
      hammer activation-key add-subscription --name "{{ sat6_org}}-{{ item[0] }}-key" \
      --subscription-id {{ item[1] }} \
      --organization "{{ sat6_org }}"
    with_nested:
      - "{{ sat6_environments_base }}"
      - "{{ sat6_pool_ids }}"
    args:
      creates: /root/.setup/step10

  - name: "Step Complete"
    shell: touch /root/.setup/step10
    args:
      creates: /root/.setup/step10

  - name: "Adding subs to activation keys for environments"
    shell: |
      hammer activation-key add-subscription --name "{{ sat6_org}}-{{ item[0] }}-key" \
      --subscription-id {{ item[1] }} \
      --organization "{{ sat6_org }}"
    with_nested:
      - "{{ sat6_environments }}"
      - "{{ sat6_pool_ids }}"
    args:
      creates: /root/.setup/step11

  - name: "Step Complete"
    shell: touch /root/.setup/step11
    args:
      creates: /root/.setup/step11

  - name: "Enabling sat tools repo in the keys"
    shell: |
      hammer activation-key content-override --name "{{ sat6_org }}-{{ item }}-key" \
      --content-label rhel-7-server-satellite-tools-6.2-rpms \
      --value 1 --organization "{{ sat6_org }}"
    with_items:
      - "{{ sat6_environments_base }}"
      - "{{ sat6_environments }}"
    args:
      creates: /root/.setup/step12

  - name: "Step Complete"
    shell: touch /root/.setup/step12
    args:
      creates: /root/.setup/step12

  - name: "Create host-collection for RHEL 7"
    shell: |
      hammer host-collection create --name='RHEL 7 x86_64 Collection' --organization={{ sat6_org }} && \
      touch /root/.setup/step13
    args:
      creates: /root/.setup/step13

  - name: "Adding host collection to activation keys"
    shell: |
      hammer activation-key add-host-collection --name='{{ sat6_org }}-{{ item }}-key' --host-collection='RHEL 7 x86_64 Collection' --organization={{ sat6_org }}
    with_items:
      - "{{ sat6_environments_base }}"
      - "{{ sat6_environments }}"
    args:
      creates: /root/.setup/step14


  - name: "Step Complete"
    shell: touch /root/.setup/step14
    args:
      creates: /root/.setup/step14

  - name: "Add all subscriptions to activation keys"
    shell: |
      for i in $(hammer --csv activation-key list --organization={{ sat6_org }} | awk -F, {'print $1'} | grep -vi '^ID'); do for j in $(hammer --csv subscription list --organization={{ sat6_org }}  | awk -F, {'print $8'} | grep -vi '^ID'); do hammer   activation-key add-subscription --id ${i} --subscription-id ${j}; done; done && \
      touch /root/.setup/step15

  - name: "Add partition table to OS"
    shell: |
      PARTID=$(hammer --csv partition-table list | grep 'Kickstart default' | awk -F, {'print $1'})
      for i in $(hammer --csv os list | awk -F, {'print $1'} | grep -vi '^ID')
      do
      hammer partition-table add-operatingsystem --id="${PARTID}" --operatingsystem-id="${i}"  
      done && \
      touch /root/.setup/step16
    args:
      creates: /root/.setup/step16

  - name: "Add kickstart pxe template to OS"
    shell: |
      PXEID=$(hammer --csv template list | grep 'Kickstart default PXELinux' | awk -F, {'print $1'})
      SATID=$(hammer --csv template list | grep 'Satellite Kickstart Default' | awk -F, {'print $1'})
      for i in $(hammer --csv os list | awk -F, {'print $1'} | grep -vi '^ID')
      do
      hammer template add-operatingsystem --id="${PXEID}" --operatingsystem-id="${i}"
      hammer os set-default-template --id="${i}" --config-template-id="${PXEID}"
      hammer os add-config-template --id="${i}" --config-template-id="${SATID}"
      hammer os set-default-template --id="${i}" --config-template-id="${SATID}"
      done && \
      touch /root/.setup/step17
    args:
      creates: /root/.setup/step17

  - name: "Add RHEL7 host group"
    shell: |
      MEDID=$(hammer --csv medium list | grep 'Red_Hat_7_Server_Kickstart_x86_64_7Server' | awk -F, {'print $1'})
      ENVID=$(hammer --csv environment list | grep rhel_7_server_x86_64  | grep -i dev | grep -v epel | awk -F, {'print $1'})
      PARTID=$(hammer --csv partition-table list | grep 'Kickstart default' | awk -F, {'print $1'})
      OSID=$(hammer --csv os list | grep 'RedHat 7.0' | awk -F, {'print $1'})
      CAID=1
      PROXYID=1
      hammer hostgroup create --architecture="x86_64" --domain="${DOM}" --environment-id="${ENVID}" --medium-id="${MEDID}" --name="RHEL 7 x86_64 Hostgroup" --subnet="Sat 6 Subnet" --ptable-id="${PARTID}" --operatingsystem-id="${OSID}" --puppet-ca-proxy-id="${CAID}" --puppet-proxy-id="${PROXYID}" && \
      touch /root/.setup/step18
