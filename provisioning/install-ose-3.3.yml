---
- include: firstboot.yml
# Launches new OSE 3.3 instance with provisioning userdata using Cloud-Init
- name: launch a compute instance
  hosts: all
  tasks:
    - name: "Enabling OSE needed repos"
      shell: "subscription-manager repos --enable={{ item }}"
      with_items: "{{ ose_repos }}"
      become: true

    - name: "Install OSE yum packages"
      yum:
        name: "{{ item }}"
        state: latest
      with_items: "{{ ose_pkgs }}"
      become: true

    - file:
        path: /root/.config/openshift
        state: directory
        owner: root
        group: root
        mode: 0755

    - file:
        path: /opt/ose-mount-host
        state: directory
        owner: 1001
        group: root
        mode: 0755

    - template:
        src: ose/installer.cfg.yml.j2
        dest: /root/.config/openshift/installer.cfg.yml
        owner: root
        group: root
        mode: 0644

    - template:
        src: ose/hosts.j2
        dest: /root/.config/openshift/hosts
        owner: root
        group: root
        mode: 0644

    - template:
        src: ose/docker-storage-setup.j2
        dest: /etc/sysconfig/docker-storage-setup
        owner: root
        group: root
        mode: 0644

    - template:
        src: ose/docker.j2
        dest: /etc/sysconfig/docker
        owner: root
        group: root
        mode: 0644

    - template:
        src: ose/fix-ose-auth.txt.j2
        dest: /tmp/fix-ose-auth.txt
        owner: root
        group: root
        mode: 0644

    - name: "Setup docker storage, requires a separate volume on /dev/vdb"
      shell: |
        docker-storage-setup

    - name: "Enabling and restarting services {{ ose_svcs }}"
      service:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items: "{{ ose_svcs }}"
      become: true

    - name: "Set ntp to true"
      shell: |
        timedatectl set-ntp true
#        sleep 2 && shutdown -r now
      poll: 0
      async: 1
      become: true
      ignore_errors: yes

#    - name: Wait for server to restart
#      local_action:
#        module: wait_for
#          host={{ ansible_host }}
#          port=22
#          delay=1
#          timeout=300
#
    - name: "Install OSE 3.3"
      shell: |
        mkdir -p /var/log/openshift-install
        newip=$(ip addr list eth0 | grep 'inet ' | cut -d ' ' -f 6 | cut -d / -f1)
        atomic-openshift-installer -u install
        lead='^    method: auto$'
        tail='^  masterCA: ca-bundle.crt$'
        sed -i -e "/$lead/,/$tail/{ /$lead/{p; r /tmp/fix-ose-auth.txt
        }; /$tail/p; d }"  /etc/origin/master/master-config.yaml
        htpasswd -c -b /etc/origin/master/htpasswd admin redhat123
        exit 0
        ## create a router for apps
        oc login -u system:admin -n default
        ## create a new project
        oc new-project redhat-lab \
        --description="This is an example project to demonstrate OpenShift v3" \
        --display-name="Redhat Lab Demo Project"
        oadm policy add-scc-to-user hostnetwork -z router
        oadm router redhat-lab-router --replicas=1 \
        --service-account=router
        ## create a persistent registry
        #oadm registry --service-account=registry \
        #--config=/etc/origin/master/admin.kubeconfig \
        #--credentials=/etc/origin/master/openshift-registry.kubeconfig \
        #--images='registry.access.redhat.com/openshift3/ose-${component}:${version}' \
        #--mount-host=/opt/ose-mount-host
        ## add policy for admin user
        oadm policy add-cluster-role-to-user cluster-admin admin
        ## restart ose for htpasswd auth to take effect
        systemctl restart atomic-openshift-master
        sleep 15
        ## test login
        oc login --certificate-authority=/etc/origin/master/ca.crt -u admin -p redhat123 https://${newip}:8443
        echo
        echo "Visit http://${newip}:8443/console/ to manage OSE"
        echo "username: admin"
        echo "password: redhat123"
        echo "You may need to update your hosts file to:"
        echo "${newip} $(hostname --fqdn) $(hostname)"
        echo 
      become: true
