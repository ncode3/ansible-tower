---
- name: "Set up /etc/hosts file"
  shell: |
    hostname=$(hostname)
    shortname=$(hostname --short)
    newip=$(ip addr list eth0 | grep 'inet ' | cut -d ' ' -f 6 | cut -d / -f1)
    grep "${newip}" /etc/hosts || echo "${newip} ${hostname} ${shortname}" >> /etc/hosts
  become: true

- name: Set authorized key for root
  authorized_key:
    user: root
    state: present
    key: "{{ cloud_user_pub_key }}"

- name: "Enabling and restarting services {{ enabled_svcs }}"
  service:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  with_items: "{{ enabled_svcs }}"
  become: true

- name: "Stopping and disabling services {{ disabled_svcs }}"
  service:
    name: "{{ item }}"
    state: stopped
    enabled: no
  with_items: "{{ disabled_svcs }}"
  ignore_errors: yes
  become: true

- name: "Check if we are registered"
  shell: "subscription-manager status || true"
  register: rhsm_reg

- name: Register and subscribe to multiple pools for virtual hosts
  redhat_subscription:
    state: present
    username: "{{ rh_satellite_user }}"
    password: "{{ rh_satellite_pass }}"
    pool_ids: "{{ rh_subscription_pool_ids }}"
#    pools: "{{ rh_subscription_pools }}"
  become: true
  register: rhsm_status
  when: "'Overall Status: Current' not in rhsm_reg.stdout and ansible_virtualization_role == 'guest' "

- name: Register and subscribe to multiple pools for physical hosts
  redhat_subscription:
    state: present
    username: "{{ rh_satellite_user }}"
    password: "{{ rh_satellite_pass }}"
    pool_ids: "{{ rh_subscription_pool_physical_ids }}"
#    pools: "{{ rh_subscription_pools }}"
  become: true
  register: rhsm_status
  when: "'Overall Status: Current' not in rhsm_reg.stdout  and ansible_virtualization_role != 'guest' "

- name: "Disabling all repos"
  shell: "subscription-manager repos --disable={{ item }}"
  with_items: "{{ rh_disabled_repos }}"
  become: true

- name: "Enabling needed repos"
  shell: "subscription-manager repos --enable={{ item }}"
  with_items: "{{ rh_enabled_repos }}"
  become: true

- name: "Installing rpms {{ packages }}"
  yum:
    name: "{{ item }}"
    state: latest
  with_items: "{{ packages }}"
  become: true

# Only register if this system hasn't been registered before
- stat: path=/etc/redhat-access-insights/.unregistered
  register: unreg

- name: "Configure Red Hat Access Insights Client"
  template: src=insights-client.conf.j2 dest=/etc/redhat-access-insights/redhat-access-insights.conf
  when: unreg.stat.exists == false

- name: "Register to the Red Hat Access Insights Service"
  command: redhat-access-insights --register creates=/etc/redhat-access-insights/.registered
  when: unreg.stat.exists == false

- name: "Create custom configuration repo directory"
  file:
    path: /opt/git
    state: directory
    mode: 0755
    
- name: "Pull custom configuration from github"
  git:
    repo: 'https://github.com/syspimp/kubernetes-demo.git'
    dest: /opt/git/kubernetes-demo

- name: "Updating MOTD"
  shell: cat custom/tiger.ascii > /etc/motd
  args:
    chdir: /opt/git/kubernetes-demo
  become: true

