---
# Creates a new instance with provisioning userdata using Cloud-Init
- name: launch a compute instance
  hosts: localhost
  gather_facts: no
  vars:
    vault_os_project: Redhat_Lab
    vault_os_projectid: ""
    vault_os_user: dtaylor
    vault_os_pass: redhat123
    vault_os_url: "http://{{ osp10_controller }}:5000/v3"
    os_create_volume: "no"
    os_server:
      name: "myvm"
      state: present
      image: "RHEL 7.5 Cloud"
      flavor: "m1.medium"
      #network: "Management_101"
      network: "Dev_103"
      availability_zone: "nova"
      security_groups: Redhat_Lab-sg
      region_name: "RegionOne"
      auto_ip: no
      key_name: "dtaylor-openstack"
      
    ## this calls the install satellite playbook
    host_config_jobid: 287
    host_config_server: "{{ default_tower_server }}"
    host_config_key: dc7c0b52cd29cacceb8d3571257801ea
  environment:
    OS_TENANT_NAME: "{{ vault_os_project }}"
    OS_TENANT_ID: "{{ vault_os_projectid }}"
    OS_USERNAME: "{{ vault_os_user }}"
    OS_PASSWORD: "{{ vault_os_pass }}"
    OS_AUTH_URL: "{{ vault_os_url }}"
  tasks:
    - name: "destroy old {{ os_volume_size }}g volume for {{ os_volume_name }}"
      os_volume:
        state: absent
        availability_zone: "{{ os_server['availability_zone'] }}"
        size: "{{ os_volume_size }}"
        display_name: "{{ os_volume_name }}"
      when: os_create_volume == "yes"

    - name: "create {{ os_volume_size }}g test volume"
      os_volume:
        state: present
        availability_zone: "{{ os_server['availability_zone'] }}"
        size: "{{ os_volume_size }}"
        display_name: "{{ os_volume_name }}"
      when: os_create_volume == "yes"

    - name: delete the old server, if it exists
      os_server:
        #name: "{{ os_server['name'] }}"
        name: "{{ name | default(os_server['name'], True) }}"
        state: absent
        image: "{{ os_server['image'] }}"
        flavor: "{{ flavor | default(os_server['flavor'], True) }}"
        network: "{{ os_server['network'] }}"
        availability_zone: "{{ os_server['availability_zone'] }}"
        security_groups: "{{ os_server['security_groups'] }}"
        region_name: "{{ os_server['region_name'] }}"
        key_name: "{{ os_server['key_name'] }}"
      ignore_errors: yes

    - name: launch an instance with volume
      os_server:
        name: "{{ name | default(os_server['name'], True) }}"
        state: present
        image: "{{ os_server['image'] }}"
        #flavor: "{{ os_server['flavor'] }}"
        flavor: "{{ flavor | default(os_server['flavor'], True) }}"
        network: "{{ os_server['network'] }}"
        security_groups: "{{ os_server['security_groups'] }}"
        availability_zone: "{{ os_server['availability_zone'] }}"
        region_name: "{{ os_server['region_name'] }}"
        auto_ip: "{{ os_server['auto_ip'] }}"
        key_name: "{{ os_server['key_name'] }}"
        userdata: |
          #cloud-config
          # for reference:
          # http://cloudinit.readthedocs.org/en/latest/topics/examples.html
          # https://access.redhat.com/articles/rhel-atomic-cloud-init-faq
          preserve_hostname: false
          yum_repos:
            epel:
              mirrorlist: https://mirrors.fedoraproject.org/metalink?repo=epel-7&arch=x86_64
              enabled: true
              name: Extra Packages for Enterprise Linux 7 - x86_64
              gpgcheck: false
          system_info:
            default_user:
              name: cloud-user
          groups:
            - cloud-user
          users:
            - name: cloud-user
              primary-group: cloud-user
              groups: wheel
              se-linux-user: unconfined_u
              #ssh_pwauth: true
              lock-passwd: false
              sudo: ALL=(ALL) NOPASSWD:ALL
              ssh-authorized-keys:
                - "{{ cloud_user_pub_key }}"
            - name: root
              #ssh_pwauth: true
              lock-passwd: false
              expire: false
          #ssh_pwauth: true
          #chpasswd:
          #  list: |
          #    root:redhat123
          #    cloud-user:redhat123
          write_files:
            - path: /etc/sudoers.d/999-cloud-user
              permissions: '0440'
              content: |
                Defaults:cloud-user !requiretty
          runcmd:
           # this is post configuration job template
           - "curl -k --data 'host_config_key={{ host_config_key }}' https://{{ host_config_server }}:443/api/v1/job_templates/{{ host_config_jobid }}/callback/"
        volumes:
          - "{{ os_volume_name }}"
      when: os_create_volume == "yes"
      register: server_with_volume

    - name: Show Server's IP
      debug: var=server_with_volume.server.private_v4
      when: os_create_volume == "yes"

    - name: launch an instance with no volume
      os_server:
        name: "{{ name | default(os_server['name'], True) }}"
        state: present
        image: "{{ os_server['image'] }}"
        #flavor: "{{ os_server['flavor'] }}"
        flavor: "{{ flavor | default(os_server['flavor'], True) }}"
        network: "{{ os_server['network'] }}"
        security_groups: "{{ os_server['security_groups'] }}"
        availability_zone: "{{ os_server['availability_zone'] }}"
        region_name: "{{ os_server['region_name'] }}"
        auto_ip: "{{ os_server['auto_ip'] }}"
        key_name: "{{ os_server['key_name'] }}"
        userdata: |
          #cloud-config
          # for reference:
          # http://cloudinit.readthedocs.org/en/latest/topics/examples.html
          # https://access.redhat.com/articles/rhel-atomic-cloud-init-faq
          preserve_hostname: false
          yum_repos:
            epel:
              mirrorlist: https://mirrors.fedoraproject.org/metalink?repo=epel-7&arch=x86_64
              enabled: true
              name: Extra Packages for Enterprise Linux 7 - x86_64
              gpgcheck: false
          system_info:
            default_user:
              name: cloud-user
          groups:
            - cloud-user
          users:
            - name: cloud-user
              primary-group: cloud-user
              groups: wheel
              se-linux-user: unconfined_u
              #ssh_pwauth: true
              lock-passwd: false
              sudo: ALL=(ALL) NOPASSWD:ALL
              ssh-authorized-keys:
                - "{{ cloud_user_pub_key }}"
            - name: root
              #ssh_pwauth: true
              lock-passwd: false
              expire: false
          #ssh_pwauth: true
          #chpasswd:
          #  list: |
          #    root:redhat123
          #    cloud-user:redhat123
          runcmd:
           # this is post configuration job template
           - "curl -k --data 'host_config_key={{ host_config_key }}' https://{{ host_config_server }}:443/api/v1/job_templates/{{ host_config_jobid }}/callback/"
      when: os_create_volume == "no"
      register: server_with_no_volume

    - name: Show Server's IP
      debug: var=server_with_no_volume.server.private_v4
      when: os_create_volume == "no"
